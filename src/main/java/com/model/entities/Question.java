package com.model.entities;
// Generated Mar 28, 2021, 10:44:40 PM by Hibernate Tools 4.3.5.Final

import static javax.persistence.GenerationType.IDENTITY;

import java.util.Date;
import java.util.HashSet;
import java.util.Set;

import javax.persistence.Column;
import javax.persistence.Entity;
import javax.persistence.FetchType;
import javax.persistence.GeneratedValue;
import javax.persistence.Id;
import javax.persistence.JoinColumn;
import javax.persistence.ManyToOne;
import javax.persistence.OneToMany;
import javax.persistence.Table;
import javax.persistence.Temporal;
import javax.persistence.TemporalType;

import com.infrashtructure.EntityBase;

import lombok.Data;
import lombok.EqualsAndHashCode;

/**
 * Question generated by hbm2java
 */
@Data
@Entity
@EqualsAndHashCode(callSuper = true)
@Table(name = "question", catalog = "quizonline")
public class Question extends EntityBase implements java.io.Serializable {

	private Integer id;
	private Exam exam;
	private String content;
	private int answerType;
	private int questionType;
	private int order;
	private String image;
	private Date createDate;
	private int createBy;
	private int status;
	private Set<Answer> answers = new HashSet<Answer>(0);

	public Question() {
	}

	public Question(String content, int answerType, int questionType, int order, String image, Date createDate,
			int createBy, int status) {
		this.content = content;
		this.answerType = answerType;
		this.questionType = questionType;
		this.order = order;
		this.image = image;
		this.createDate = createDate;
		this.createBy = createBy;
		this.status = status;
	}

	public Question(Exam exam, String content, int answerType, int questionType, int order, String image,
			Date createDate, int createBy, int status, Set<Answer> answers) {
		this.exam = exam;
		this.content = content;
		this.answerType = answerType;
		this.questionType = questionType;
		this.order = order;
		this.image = image;
		this.createDate = createDate;
		this.createBy = createBy;
		this.status = status;
		this.answers = answers;
	}

	@Id
	@GeneratedValue(strategy = IDENTITY)

	@Column(name = "Id", unique = true, nullable = false)
	public Integer getId() {
		return this.id;
	}

	public void setId(Integer id) {
		this.id = id;
	}

	@ManyToOne(fetch = FetchType.LAZY)
	@JoinColumn(name = "Exam_Id")
	public Exam getExam() {
		return this.exam;
	}

	public void setExam(Exam exam) {
		this.exam = exam;
	}

	@Column(name = "Content", nullable = false, length = 250)
	public String getContent() {
		return this.content;
	}

	public void setContent(String content) {
		this.content = content;
	}

	@Column(name = "Answer_Type", nullable = false)
	public int getAnswerType() {
		return this.answerType;
	}

	public void setAnswerType(int answerType) {
		this.answerType = answerType;
	}

	@Column(name = "Question_Type", nullable = false)
	public int getQuestionType() {
		return this.questionType;
	}

	public void setQuestionType(int questionType) {
		this.questionType = questionType;
	}

	@Column(name = "Order", nullable = false)
	public int getOrder() {
		return this.order;
	}

	public void setOrder(int order) {
		this.order = order;
	}

	@Column(name = "Image", nullable = false, length = 200)
	public String getImage() {
		return this.image;
	}

	public void setImage(String image) {
		this.image = image;
	}

	@Temporal(TemporalType.TIMESTAMP)
	@Column(name = "Create_Date", nullable = false, length = 19)
	public Date getCreateDate() {
		return this.createDate;
	}

	public void setCreateDate(Date createDate) {
		this.createDate = createDate;
	}

	@Column(name = "Create_By", nullable = false)
	public int getCreateBy() {
		return this.createBy;
	}

	public void setCreateBy(int createBy) {
		this.createBy = createBy;
	}

	@Column(name = "Status", nullable = false)
	public int getStatus() {
		return this.status;
	}

	public void setStatus(int status) {
		this.status = status;
	}

	@OneToMany(fetch = FetchType.LAZY, mappedBy = "question")
	public Set<Answer> getAnswers() {
		return this.answers;
	}

	public void setAnswers(Set<Answer> answers) {
		this.answers = answers;
	}

}
